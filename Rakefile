require 'rubygems'

task :default => :test
task :clean   => :clobber


## Documentation

# begin
#   require 'yard'
#   YARD::Rake::YardocTask.new
# rescue LoadError => e
#   $stderr.puts 'It seems as though you do not have yard installed.'
#   command = ENV['RUBY_VERSION'] ? 'rake' : 'sudo macrake'
#   $stderr.puts "You can install it by running `#{command} setup_dev`"
# end

# desc 'Generate Graphviz object graph'
# task :garden => :yard do
#   sh 'yard graph --full --dependencies --dot="-Tpng:quartz" -f docs/images/AX.dot'
# end


## Console

desc 'Start up irb with AXElements loaded'
task :console => :ext do
  irb = ENV['RUBY_VERSION'] ? 'irb' : 'macirb'
  sh "#{irb} -Ilib -rubygems -rax_elements"
end


## Compilation

if RUBY_ENGINE == 'macruby'
  require 'rake/compiletask'
  Rake::CompileTask.new
end

desc 'Compile C extensions'
task :ext do
  ext    = 'key_coder'
  bundle = "#{ext}.bundle"
  source = "#{ext}.m"
  root   = ENV['PWD']
  Dir.chdir "ext/accessibility/#{ext}" do
    break if File.exists?(bundle) && File.mtime(bundle) > File.mtime(source)
    ruby 'extconf.rb'
    sh   'make'
    cp   bundle, "#{root}/lib/accessibility"
  end
end

desc 'Remove files generated by compiling the C extension'
task :clobber_ext do
  ext    = 'key_coder'
  bundle = "#{ext}.bundle"
  object = "#{ext}.o"
  Dir.chdir "ext/accessibility/#{ext}" do
    ['Makefile', object, bundle].each do |file|
      $stdout.puts "rm ext/accessibility/#{ext}/#{file}"
      rm_f file
    end
  end
  $stdout.puts "rm lib/accessibility/#{bundle}"
  rm_f "lib/accessibility/#{bundle}"
end
task :clobber => :clobber_ext


## Testing

desc 'Open the fixture app'
task :run_fixture => :fixture do
  sh 'open test/fixture/Release/AXElementsTester.app'
end

desc 'Build the test fixture'
task :fixture do
  sh 'cd test/AXElementsTester && xcodebuild'
end

desc 'Remove the built fixture app'
task :clobber_fixture do
  $stdout.puts 'rm -rf test/fixture'
  rm_rf 'test/fixture'
end
task :clobber => :clobber_fixture

require 'rake/testtask'
namespace :test do
  [:unit, :integration].each do |group|
    Rake::TestTask.new(group) do |t|
      t.libs     << 'test'
      t.pattern   = "test/#{group}/**/test_*.rb"
      t.ruby_opts = ['-rhelper']
      t.verbose   = true
    end
    task group => [:ext, :fixture]
  end
end

desc 'Run all tests'
task :test => ['test:unit', 'test:integration']


## Gem Packaging

require 'rubygems/package_task'
spec = Gem::Specification.load('AXElements.gemspec')
Gem::PackageTask.new(spec) { }

desc 'Build and install gem (not including deps)'
task :install => :gem do
  require 'rubygems/installer'
  Gem::Installer.new("pkg/#{spec.file_name}").install
end


## Setup

desc 'Install dependencies for development'
task :setup_dev do
  require 'rubygems/dependency_installer'
  spec.development_dependencies.each do |dep|
    puts "Installing #{dep.name} (#{dep.requirement})"
    Gem::DependencyInstaller.new.install(dep.name, dep.requirement)
  end
end
